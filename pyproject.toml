[project]
name = "kma_chat_agent"
version = "0.1.0"
description = ""
authors = [
    {name = "Giang Hoang Van",email = "hoang.van.giang@sun-asterisk.com"}
]
readme = "README.md"
requires-python = ">=3.12, <4.0"
dependencies = [
    "python-dotenv (>=1.1.0,<2.0.0)",
    "black (>=25.1.0,<26.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "langchain (>=0.3.22,<0.4.0)",
    "langgraph (>=0.3.21,<0.4.0)",
    "grandalf (>=0.8,<0.9)",
    "langchain-ollama (>=0.3.0,<0.4.0)",
    "langchain-openai (>=0.3.11,<0.4.0)",
    "langchain-experimental (>=0.3.4,<0.4.0)",
    "streamlit (>=1.44.1,<2.0.0)",
    "faiss-cpu (>=1.10.0,<2.0.0)",
    "rank-bm25 (>=0.2.2,<0.3.0)",
    "numpy (>=2.2.4,<3.0.0)",
    "torch (>=2.6.0,<3.0.0)",
    "transformers (>=4.51.2,<5.0.0)",
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn[standard] (>=0.34.0,<0.35.0)",
    "motor (>=3.7.0,<4.0.0)",
    "pydantic (>=2.11.3,<3.0.0)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "passlib[bcrypt] (>=1.7.4,<2.0.0)",
    "python-jose[cryptography] (>=3.5.0,<4.0.0)",
    "pylint (>=3.3.7,<4.0.0)",
    "langgraph-cli[inmem] (>=0.2.10,<0.3.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "mcp (>=1.9.0,<2.0.0)",
    "langgraph-supervisor (>=0.0.21,<0.0.22)",
    "langchain-google-genai (>=2.1.4,<3.0.0)",
    "typer (>=0.15.4,<0.16.0)",
    "pymongo (>=4.13.2,<5.0.0)",
    "openpyxl (>=3.1.5,<4.0.0)",
    "sentence-transformers (>=5.0.0,<6.0.0)",
    "pandas (>=2.3.0,<3.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
    "requests (>=2.32.0,<3.0.0)",
    "pypdf2 (>=3.0.0)",
    "python-docx (>=0.8.11)",
    "nltk (>=3.8.1)",
    "plotly (>=6.3.0,<7.0.0)",
    "email-validator (>=2.3.0,<3.0.0)"
]

[tool.poetry]
packages = [
    {include = "agent", from = "src"},
    {include = "backend", from = "src"},
    {include = "rag", from = "src"},
    {include = "llm", from = "src"},
    {include = "score", from = "src"},
    {include = "streamlit_ui", from = "src"},
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0", "setuptools>=73.0.0", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.setuptools]
packages = ["langgraph.templates.agent", "agent"]
[tool.setuptools.package-dir]
"langgraph.templates.agent" = "src/agent"
"agent" = "src/agent"

[tool.setuptools.package-data]
"*" = ["py.typed"]


[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "anyio>=4.7.0",
    "langgraph-cli[inmem]>=0.2.8",
]
